name: Build PyJi Binary

on:
  - push

env:
  BINARY_NAME: pyji

jobs:
  build:
    name: Build binary
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-13]
        include:
          - os: ubuntu-latest
            platform_name: linux-amd64
          - os: windows-latest
            platform_name: windows-amd64
          - os: macos-latest
            platform_name: macos-arm64
          - os: macos-13
            platform_name: macos-amd64
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.os }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build binary with PyInstaller
        run: |
          ls
          ls icons/
          pyinstaller --noconsole --add-data "icons:icons" --onefile main.py

      - name: Upload artifact (Linux)
        # if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}_${{ matrix.platform_name }}
          path: dist/main.*

      # - name: Upload artifact (Windows)
      #   if: matrix.os == 'windows-latest'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ${{ env.BINARY_NAME }}_windows-amd64
      #     path: dist/main.exe